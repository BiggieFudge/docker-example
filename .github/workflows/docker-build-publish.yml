name: Docker Build and Publish to Artifactory

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      JF_WATCHES: etn-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: '2.78.9' # Use a specific semantic version to avoid errors

      - name: Configure JFrog CLI
        run: |
          jf c add my-artifactory \
            --url=${{ secrets.JF_URL }} \
            --access-token=${{ secrets.JF_ACCESS_TOKEN }} \
            --interactive=false

      - name: Docker login to Artifactory
        run: |
          docker login idani.jfrog.io \
            -u eytanr \
            -p ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Build and push Docker image with JFrog CLI
        # Use a single command to perform both the Docker build and push.
        # This command also automatically collects all build information.
        run: |
          docker build -t idani.jfrog.io/eytanr-docker/docker-example:${{ github.sha }} .
          jf docker scan idani.jfrog.io/eytanr-docker/docker-example:${{ github.sha }} --project=etn
          jf rt docker-push idani.jfrog.io/eytanr-docker/docker-example:${{ github.sha }} eytanr-docker --build-name=my-app-build --build-number=${{ github.run_number }} --project=etn
          
      - name: Publish build info
        # This is the crucial step that creates the "build" record in Artifactory.
        run: jf rt build-publish my-app-build ${{ github.run_number }} --project=etn --watches=etn-test
      - name: Scan Build info
        run: jf bs my-app-build ${{ github.run_number }} --project=etn
